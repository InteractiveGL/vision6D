name: Build Executables and Create GitHub Release

on:
  push:
    tags:
      - "*"

jobs:
  build-executables:
    name: Build Executables with PyInstaller
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: ''
            arch: 'x86_64'
          - os: ubuntu-22.04
            target: ''
            arch: 'x86_64'
          - os: macos-latest
            target: 'x86_64'
            arch: 'x86_64'
          - os: macos-latest
            target: 'arm64'
            arch: 'arm64'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python (Windows/Linux)
        if: matrix.os != 'macos-latest'
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install .

      - name: Install PyInstaller
        run: |
          pip install pyinstaller

      - name: Build Executable (Windows/Linux)
        if: matrix.os != 'macos-latest'
        run: |
          pyinstaller --add-data="vision6D/data:vision6D/data" --onefile --name vision6d-${{ runner.os }}-${{ matrix.arch }} -m scripts/__main__.py

      - name: Build Executable (macOS Universal)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --add-data="vision6D/data:vision6D/data" --onefile --name vision6d-macos-${{ matrix.arch }} -m scripts/__main__.py
          # Force binary architecture using lipo
          lipo dist/vision6d-macos-${{ matrix.arch }} -thin ${{ matrix.arch }} -output dist/vision6d-macos-${{ matrix.arch }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vision6d-${{ runner.os }}-${{ matrix.arch }}
          path: |
            dist/vision6d-${{ runner.os }}-${{ matrix.arch }}${{ runner.os == 'Windows' && '.exe' || '' }}
            dist/vision6d-macos-${{ matrix.arch }}

  create-release:
    name: Create Draft GitHub Release and Upload Assets
    runs-on: ubuntu-latest
    needs: build-executables
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Prepare Artifacts
        run: |
          mv ./artifacts/vision6d-Windows-x86_64/vision6d-Windows-x86_64.exe ./vision6d-windows.exe
          mv ./artifacts/vision6d-Linux-x86_64/vision6d-Linux-x86_64 ./vision6d-linux
          mv ./artifacts/vision6d-macOS-x86_64/vision6d-macos-x86_64 ./vision6d-macos-intel
          mv ./artifacts/vision6d-macOS-arm64/vision6d-macos-arm64 ./vision6d-macos-silicon
          chmod +x vision6d-linux vision6d-macos-intel vision6d-macos-silicon

      - name: Release and Upload Executables
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            vision6d-windows.exe
            vision6d-linux
            vision6d-macos-intel
            vision6d-macos-silicon
