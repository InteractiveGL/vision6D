name: Build Executables and Create GitHub Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build Installers
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            arch: arm64
          - os: ubuntu-22.04
            arch: x86_64
          - os: windows-latest
            arch: x86_64

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install .
          pip install pyinstaller

      - name: Build Executable (Windows/Linux)
        if: matrix.os != 'macos-latest'
        run: |
          pyinstaller --add-data="vision6D/data:vision6D/data" --onefile --name vision6d-${{ runner.os }}-${{ matrix.arch }} --icon="vision6D/vision6D/data/logo.ico" scripts/__main__.py

      - name: Build Executable (macOS ARM64)
        if: matrix.os == 'macos-latest' && matrix.arch == 'arm64'
        run: |
          arch -arm64 python3 -m pip install .
          arch -arm64 python3 -m pip install pyinstaller
          arch -arm64 pyinstaller --add-data="vision6D/data:vision6D/data" --onefile --name vision6d-macOS-arm64 --icon="vision6D/data/logo.icns" scripts/__main__.py \
            --hidden-import="vtkmodules.all" \
            --hidden-import="vtkmodules.util.data_model" \
            --hidden-import="vtkmodules.util.execution_model" \
            --hidden-import="vtkmodules.util.numpy_support" \
            --hidden-import="vtkmodules.util.vtkConstants"

      # macOS .dmg installer
      - name: Create macOS Drag-and-Drop DMG
        if: matrix.os == 'macos-latest'
        run: |
          # Setup directories
          mkdir -p dmg_build
          mkdir -p dmg_build_tmp/"vision6d"

          # Copy executable
          cp dist/vision6d-macos-arm64 dmg_build_tmp/"vision6d/Vision6D"

          # Make symbolic link to /Applications for drag-and-drop install
          ln -s /Applications dmg_build_tmp/"vision6d/Applications"

          # Create the dmg
          hdiutil create -volname "Vision6D" -srcfolder dmg_build_tmp/"vision6d" \
              -ov -format UDZO vision6d-macos-arm64.dmg

      # Linux .deb package
      - name: Create DEB (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get install -y dpkg fakeroot
          mkdir -p vision6d_1.0.0-1_amd64/usr/local/bin
          cp dist/vision6d-Linux-x86_64 vision6d_1.0.0-1_amd64/usr/local/bin/
          mkdir vision6d_1.0.0-1_amd64/DEBIAN
          echo -e "Package: vision6d\nVersion: 1.0.0\nArchitecture: amd64\nMaintainer: Your Name <your-email@example.com>\nDescription: Vision6D application." > vision6d_1.0.0-1_amd64/DEBIAN/control
          fakeroot dpkg-deb --build vision6d_1.0.0-1_amd64 vision6d-linux.deb

      # Windows .exe installer with NSIS
      - name: Create EXE installer (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          choco install nsis -y
          mkdir installer
          move dist\vision6d-Windows-x86_64.exe installer\vision6d.exe

          @'
          !define APP_NAME "Vision6D"
          !define APP_VERSION "1.0.0"
          !define APP_EXE "vision6d.exe"

          OutFile "..\vision6d-windows-installer.exe"
          InstallDir "$PROGRAMFILES\${APP_NAME}"
          RequestExecutionLevel admin

          Page directory
          Page instfiles

          UninstPage uninstConfirm
          UninstPage instfiles

          Section "Install"
            SetOutPath "$INSTDIR"
            File "${APP_EXE}"
            CreateShortcut "$DESKTOP\${APP_NAME}.lnk" "$INSTDIR\${APP_EXE}" "" "$INSTDIR\${APP_EXE}" 0
            CreateShortcut "$SMPROGRAMS\${APP_NAME}.lnk" "$INSTDIR\${APP_EXE}" "" "$INSTDIR\${APP_EXE}" 0
            WriteUninstaller "$INSTDIR\uninstall.exe"
          SectionEnd

          Section "Uninstall"
            Delete "$INSTDIR\${APP_EXE}"
            Delete "$INSTDIR\uninstall.exe"
            Delete "$DESKTOP\${APP_NAME}.lnk"
            Delete "$SMPROGRAMS\${APP_NAME}.lnk"
            RMDir "$INSTDIR"
          SectionEnd 
          '@ | Out-File -Encoding ASCII installer\installer.nsi

          makensis installer\installer.nsi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vision6d-${{ runner.os }}
          path: |
            *.dmg
            *.deb
            *.exe

  release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Prepare Artifacts
        run: |
          mv ./artifacts/vision6d-macOS/*.dmg ./vision6d-macos.dmg
          mv ./artifacts/vision6d-Linux/*.deb ./vision6d-linux.deb
          mv ./artifacts/vision6d-Windows/*.exe ./vision6d-windows-installer.exe

      - name: Release and Upload
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            vision6d-macos.dmg
            vision6d-linux.deb
            vision6d-windows-installer.exe
