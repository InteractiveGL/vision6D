name: Build Executables and Create GitHub Release

on:
  push:
    tags:
      - "*"

jobs:
  build-executables:
    name: Build Executables with PyInstaller
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Linux apt-get dependencies (Ubuntu only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            xvfb \
            libxkbcommon-x11-0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-xinerama0 \
            libxcb-xinput0 \
            libxcb-xfixes0 \
            libxcb-shape0 \
            libglib2.0-0 \
            libgl1-mesa-dev \
            '^libxcb.*-dev' \
            libx11-xcb-dev \
            libglu1-mesa-dev \
            libxrender-dev \
            libxi-dev \
            libxkbcommon-dev \
            libxkbcommon-x11-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Install PyInstaller
        run: |
          pip install pyinstaller

      - name: Build Executable with PyInstaller
        run: |
          pyinstaller --add-data="vision6D/data:vision6D/data" --onefile --name vision6d scripts/__main__.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vision6d-${{ runner.os }}
          path: dist/vision6d${{ runner.os == 'Windows' && '.exe' || '' }}

  create-release:
    name: Create Draft GitHub Release and Upload Assets
    runs-on: ubuntu-latest
    needs: build-executables
    permissions:
      contents: write

    steps:
      - name: Download all Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Prepare Artifacts
        run: |
          mv ./artifacts/vision6d-Windows/vision6d.exe ./vision6d-windows.exe
          mv ./artifacts/vision6d-Linux/vision6d ./vision6d-linux
          mv ./artifacts/vision6d-macOS/vision6d ./vision6d-macos
          chmod +x ./vision6d-linux ./vision6d-macos

      - name: Release and Upload Executables
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            vision6d-windows.exe
            vision6d-linux
            vision6d-macos
